#-----------------------------------
# Copyright IBM Corp. 1992, 2018. All rights reserved.
# US Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#-----------------------------------
#
---

- name: Gather ec2 instances from Resource Connector
  hosts: LSF_Masters[0]
  vars_files:
    - AWS/AWS-config.yml
  user: "{{ AWS_Image_User }}"
  become: true
  gather_facts: true
  vars:
    ansible_ssh_private_key_file: "{{ AWS_Private_Key_File }}"
  roles:
    - gather-local-env
  tasks:
    - name: Reload EC2 server inventory
      include_vars: "{{ RC_PLAY_TOP }}/inventory_ec2servers.yml"

    - name: Make a hostgroup from the private IPs for ansible to connect to
      add_host:
        hostname: "{{ item.prv_ip }}"
        groupname: ec2servers
        prv_ip: "{{ item.prv_ip }}"
      with_items: "{{ ec2servers }}"

    - name: Reload VPN server inventory
      include_vars: "inventory_ec2.yml"
    
    - name: Make the ec2vpn host list
      add_host:
        hostname: "{{ item.pub_ip }}"
        groupname: ec2vpn
        prv_ip: "{{ item.prv_ip }}"
      with_items: "{{ ec2vpn }}"

    - name: Reload the new ec2 server from rc results
      add_host:
        hostname: "{{ item.private_ip }}"
        groupname: ec2newservers
      with_items: "{{ ec2.instances }}"

    - name: Load variables
      include_vars: "{{ RC_PLAY_TOP }}/Storage-config.yml"

    - name: Create a fstab.append file
      template:
        src: "{{ RC_PLAY_TOP }}/template/fstab.j2"
        dest: "{{ RC_PLAY_TOP }}/files/fstab.append"

    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.public_dns_name }}"
        port: 22
        delay: 60
        timeout: 320
        state: started
      with_items: "{{ ec2.instances }}"



- name: Configure EC2 main instance as part of LSF Cluster
  hosts: ec2newservers
  vars_files:
    - AWS/AWS-config.yml
  user: "{{ AWS_Image_User }}"
  become: true
  gather_facts: true
  vars:
    ansible_ssh_private_key_file: "{{ AWS_Private_Key_File }}"
  roles:
    - update-remote-env
    - deploy-cloud-server
