---
# -----------------------------------
#  Copyright IBM Corp. 2021. All rights reserved.
#  US Government Users Restricted Rights - Use, duplication or disclosure
#  restricted by GSA ADP Schedule Contract with IBM Corp.
# -----------------------------------

- include_vars: "{{ playbook_dir }}/GEN2/GEN2-config.yml"

# The BEGIN/END ansible module marker will be replaced with {} in deploy-rc
- name: Modify {{ role_path }}/files/ibmcloudgen2_config.json
  blockinfile:
    create: yes
    path: "{{ role_path }}/files/ibmcloudgen2_config.json"
    block: |
      "IBMCLOUDGEN2_KEY_FILE": "{{ LSF_CONF_DIR }}/resource_connector/ibmcloudgen2/data/credentials",
      "IBMCLOUDGEN2_SSH_FILE": "{{ LSF_CONF_DIR }}/resource_connector/ibmcloudgen2/data/id_rsa",
      "IBMCLOUDGEN2_PROVISION_FILE": "{{ LSF_VER_DIR }}/resource_connector/ibmcloudgen2/scripts/user_data.sh",
      "IBMCLOUDGEN2_MACHINE_PREFIX": "{{ rc_vm_prefix }}",
      "LogLevel": "INFO"
 
- name: Copy user_data.sh
  copy:
    src: "{{ playbook_dir }}/files/user_data.sh"
    dest: "{{ role_path }}/files/user_data.sh"

- name: Check if <nfs_mnt_dir> in user_data.sh exists
  shell: grep "<nfs_mnt_dir>" {{ role_path }}/files/user_data.sh
  changed_when: false
  register: mntdir_update
  ignore_errors: yes

- name: replace <nfs_mnt_dir>
  when: not mntdir_update.failed
  replace:
    path: "{{ role_path }}/files/user_data.sh"
    regexp: "<nfs_mnt_dir>"
    replace: "{{ LSF_NFS_MNT_DIR }}"
    backup: no

- name: Check if <domain_name> in user_data.sh exists
  shell: grep "<domain_name>" {{ role_path }}/files/user_data.sh
  changed_when: false
  register: domain_update
  ignore_errors: yes

- name: replace <domain_name>
  when: not domain_update.failed
  replace:
    path: "{{ role_path }}/files/user_data.sh"
    regexp: "<domain_name>"
    replace: "{{ GEN2_DNS_Domain_Name }}"
    backup: no

- name: set the lsf master's local IP address
  lineinfile:
    path: "{{ role_path }}/files/user_data.sh"
    regexp: '^lsf_master_ip=<master_ip>'
    line: lsf_master_ip={{ lsf_master_ip }}

- name: set the lsf master's hostname 
  lineinfile:
    path: "{{ role_path }}/files/user_data.sh"
    regexp: '^lsf_master_hname=<master_hostname>'
    line: lsf_master_hname={{ lsf_master_hostname }}

- name: set the DNS instance ID 
  lineinfile:
    path: "{{ role_path }}/files/user_data.sh"
    regexp: '^DNS_INSTANCE_ID='
    line: DNS_INSTANCE_ID={{ GEN2_DNS_Instance_ID }} 

- name: set the DNS services endpoint 
  lineinfile:
    path: "{{ role_path }}/files/user_data.sh"
    regexp: '^DNSSVCS_ENDPOINT='
    line: DNSSVCS_ENDPOINT={{ GEN2_DNS_SVCS_ENDPOINT }}

- name: set the DNS zone id 
  lineinfile:
    path: "{{ role_path }}/files/user_data.sh"
    regexp: '^DNSZONE_ID='
    line: DNSZONE_ID={{ GEN2_DNS_Zone_ID }}

- name: set the LSF_TOP  
  lineinfile:
    path: "{{ role_path }}/files/user_data.sh"
    regexp: '^LSF_TOP='
    line: LSF_TOP={{ rc_image_LSF_TOP }}
