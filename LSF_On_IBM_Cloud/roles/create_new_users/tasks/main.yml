---
# -----------------------------------
#  Copyright IBM Corp. 2020. All rights reserved.
#  US Government Users Restricted Rights - Use, duplication or disclosure
#  restricted by GSA ADP Schedule Contract with IBM Corp.
# -----------------------------------

- include_tasks: "../../common/tasks/get_files_dir.yml"
  when: gen_files_dir is undefined or gen_files_dir == ""



- name: "Creating group: {{cloud_only.lsf_user_group}}"
  group:
    name: "{{cloud_only.lsf_user_group}}"
    gid: "1500"
  become: yes

- name: "Creating users"
  user:
    name: "{{item}}"
    create_home: True
    home: "{{nfs_mnt_dir}}/home/{{item}}"
    uid: "{{idx|int + 1500}}"
    group: "{{cloud_only.lsf_user_group}}"
#        local: yes
    shell: "/bin/bash"
    generate_ssh_key: yes
  become: yes
  loop: "{{cloud_only.lsf_user_list}}"
  loop_control:
    index_var: idx

- name: "Create local sshkey directory"
  file:
    path: "{{gen_files_dir}}/userkeys"
    state: directory
  delegate_to: localhost
  run_once: yes

- name: "Fetch private ssh key for users to log in"
  fetch:
    src: "{{nfs_mnt_dir}}/home/{{item}}/.ssh/id_rsa"
    flat: yes
    dest: "{{gen_files_dir}}/userkeys/id_rsa_{{item}}"
  loop: "{{cloud_only.lsf_user_list}}"
  become: yes
  when: inventory_hostname == hostvars[ groups['master'][0]]['inventory_hostname']
  run_once: yes

- name: "Fetch public ssh key for users"
  fetch:
    src: "{{nfs_mnt_dir}}/home/{{item}}/.ssh/id_rsa.pub"
    flat: yes
    dest: "{{gen_files_dir}}/userkeys/id_rsa_{{item}}.pub"
  loop: "{{cloud_only.lsf_user_list}}"
  become: yes
  when: inventory_hostname == hostvars[ groups['master'][0]]['inventory_hostname']
  run_once: yes

- name: "Need to adjust file permissions since fetch can mess that up"
  file:
    path: "{{gen_files_dir}}/userkeys/id_rsa_{{item}}"
    mode: u+rw,go-rwx
  loop: "{{cloud_only.lsf_user_list}}"
  delegate_to: localhost
  run_once: yes

- name: "Add to authorized keys"
  authorized_key:
    user: "{{item}}"
    state: present
    key: "{{lookup('file',gen_files_dir+'/userkeys/id_rsa_'+item+'.pub')}}"
  loop: "{{cloud_only.lsf_user_list}}"
  become: yes




- name: "Keyscan workers and masters"
  command: "ssh-keyscan -tecdsa {{item}}"
  loop: "{{groups['worker'] + groups['master']}}"
  register: host_key_output
  when: host_keys is undefined
  run_once: yes

- set_fact:
    host_keys: "{{host_key_output.results|json_query('[*].{host: item,
                                        key: stdout }')}}"
  when: host_keys is undefined

- name: "Set known_hosts for first user"
  known_hosts:
    key: "{{ item.key }}"
    name: "{{ item.host }}"
    state: present
  loop: "{{host_keys}}"
  no_log: true
  become: yes
  become_user: "{{cloud_only.lsf_user_list[0]}}"
  run_once: yes

- name: "Fetch the known_hosts file for distribution"
  fetch:
    src: "{{nfs_mnt_dir}}/home/{{cloud_only.lsf_user_list[0]}}/.ssh/known_hosts"
    flat: yes
    dest: "{{gen_files_dir}}/userkeys/known_hosts"
  run_once: yes

- name: "Create known_hosts file for all users"
  copy:
    src: "{{gen_files_dir}}/userkeys/known_hosts"
    dest: "{{nfs_mnt_dir}}/home/{{item}}/.ssh/known_hosts"
    owner: "{{item}}"
    group: "{{cloud_only.lsf_user_group}}"
    mode: u+rw,go-rwx
  loop: "{{cloud_only.lsf_user_list}}"
  run_once: yes
