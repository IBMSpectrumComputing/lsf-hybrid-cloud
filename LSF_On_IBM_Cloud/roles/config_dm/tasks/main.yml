---
# -----------------------------------
#  Copyright IBM Corp. 1992,2020. All rights reserved.
#  US Government Users Restricted Rights - Use, duplication or disclosure
#  restricted by GSA ADP Schedule Contract with IBM Corp.
# -----------------------------------


# assumes this is run from the on-prem LSF master so it is able to collect certain
# local LSF host and configuration information that's needed to set up the remote
# LSF cluster
# default uses the hostname of the driving host

- fail:
    msg: "missing variable definition: {{item.k}}"
  when: item.v == None
  loop:
    - {k: 'multicluster.cloud.conf_dir',      v: "{{multicluster.cloud.conf_dir|default(None)}}" }
    - {k: 'lsf_cluster_name',                 v: "{{lsf_cluster_name|default(None)}}" }
    - {k: 'multicluster.onprem.conf_dir',     v: "{{multicluster.onprem.conf_dir|default(None)}}" }
    - {k: 'multicluster.onprem.cluster_name', v: "{{multicluster.onprem.cluster_name|default(None)}}" }

# Datamanager configuration of Cloud LSF Master
# the Peer is the onprem cluster
- name: "Setup Datamanager at Cloud LSF Master"
  include_tasks: configure_dm.yml
  vars:
    default_peer:
      host: "{{hostvars[groups['local'][0]]['ansible_hostname']}}"
      port: "9998"
    lsf_conf_dir: "{{multicluster.cloud.conf_dir}}"
    lsf_cluster_name_local: "{{lsf_cluster_name}}"
    lsf_cluster_name_peer: "{{multicluster.onprem.cluster_name}}"
    peer:
      host: "{{ multicluster.onprem.host | default(default_peer.host) }}"
      port: "{{ multicluster.onprem.port | default(default_peer.port) }}"
  when: ansible_play_hosts[0] == groups['master'][0]
# todo: this only works for a single-master config



# Datamanager configuration of On-Prem LSF Master
# the Peer is the cloud cluster
- name: "Setup Datamanager at on-prem LSF Master"
  include_tasks: configure_dm.yml
  vars:
    default_peer:
      host: "{{hostvars[groups['master'][0]]['ansible_hostname']}}"
      port: "9998"
    lsf_conf_dir: "{{multicluster.onprem.conf_dir}}"
    lsf_cluster_name_local: "{{multicluster.onprem.cluster_name}}"
    lsf_cluster_name_peer: "{{lsf_cluster_name}}"
    peer:
      host: "{{ multicluster.cloud.host | default(default_peer.host) }}"
      port: "{{ multicluster.cloud.port | default(default_peer.port) }}"
  when: ansible_play_hosts[0] == groups['local'][0]
# todo: this only works for a single-master config
